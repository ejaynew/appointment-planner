{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emmaj\\\\OneDrive\\\\Documents\\\\appointment-planner\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\n  const addContact = (inputName, inputPhone, inputEmail) => {\n    const newContact = {\n      cName: inputName,\n      cPhone: inputPhone,\n      cEmail: inputEmail\n    };\n    setContacts([...contacts, newContact]);\n  };\n  const addAppointment = (inputName, inputContact, inputDate, inputTime) => {\n    const newContact = {\n      cName: inputName,\n      cContact: inputContact,\n      cDate: inputDate,\n      cTime: inputTime\n    };\n    setContacts([...contacts, newContact]);\n  };\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 32\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 20\n      }, this) /* Add props to ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 20\n      }, this) /* Add props to AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"ilNV2NNtl3t/F9tV3D6w+C6XRbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","appointments","setAppointments","addContact","inputName","inputPhone","inputEmail","newContact","cName","cPhone","cEmail","addAppointment","inputContact","inputDate","inputTime","cContact","cDate","cTime","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["C:/Users/emmaj/OneDrive/Documents/appointment-planner/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  RouterProvider,\r\n  createBrowserRouter,\r\n  createRoutesFromElements,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /*\r\n  Define state variables for \r\n  contacts and appointments \r\n  */\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  /*\r\n  Implement functions to add data to\r\n  contacts and appointments\r\n  */\r\n  const addContact = (inputName, inputPhone, inputEmail) => {\r\n    const newContact = {\r\n      cName: inputName,\r\n      cPhone: inputPhone,\r\n      cEmail: inputEmail\r\n    };\r\n    setContacts([...contacts, newContact]);\r\n  };\r\n  const addAppointment = (inputName, inputContact, inputDate, inputTime) => {\r\n    const newContact = {\r\n      cName: inputName,\r\n      cContact: inputContact,\r\n      cDate: inputDate,\r\n      cTime: inputTime,\r\n    };\r\n    setContacts([...contacts, newContact]);\r\n  };\r\n\r\n  const router = createBrowserRouter(\r\n    createRoutesFromElements(\r\n      <Route path=\"/\" element={<Root />}>\r\n        <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n        <Route\r\n          path={ROUTES.CONTACTS}\r\n          element={<ContactsPage /> /* Add props to ContactsPage */}\r\n        />\r\n        <Route\r\n          path={ROUTES.APPOINTMENTS}\r\n          element={<AppointmentsPage /> /* Add props to AppointmentsPage */}\r\n        />\r\n      </Route>\r\n    )\r\n  );\r\n\r\n  return <RouterProvider router={router} />;\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}